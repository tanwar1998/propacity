{"version":3,"file":"static/js/715.73211628.chunk.js","mappings":"+LAEaA,EAAoBC,EAAAA,GAAOC,IAAGC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,qqBAsC9BC,EAAkBJ,EAAAA,GAAOC,IAAGI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,iqC,2BCAzC,EAjCkB,SAAHG,GAAqC,IAAhCC,EAAID,EAAJC,KAAMC,EAAMF,EAANE,OAAQC,EAAIH,EAAJG,KAAMC,EAAKJ,EAALI,MACtC,OACEC,EAAAA,EAAAA,MAACP,EAAe,CAAAQ,SAAA,EACZC,EAAAA,EAAAA,KAAA,OAAKC,IAAM,SAAWP,EAAKQ,IAAIC,UAAUC,KAAMC,IAAK,aACpDL,EAAAA,EAAAA,KAAA,OAAKM,UAAU,cAAaP,SACvBL,EAAKa,QAEVP,EAAAA,EAAAA,KAAA,OAAKM,UAAU,oBAAmBP,SAC7BL,EAAKQ,IAAIC,UAAUK,QAExBR,EAAAA,EAAAA,KAAA,OAAKM,UAAU,oBAAmBP,SAC7BH,KAELI,EAAAA,EAAAA,KAAA,OAAKM,UAAU,cAAaP,UACvBU,EAAAA,EAAAA,GAAQf,EAAKQ,IAAIQ,UAAWb,MAEjCC,EAAAA,EAAAA,MAAA,OAAKQ,UAAU,uBAAsBP,SAAA,EACjCD,EAAAA,EAAAA,MAAA,QAAMQ,UAAU,OAAMP,SAAA,CAAC,UACbC,EAAAA,EAAAA,KAAA,QAAMW,MAAO,CAACC,WAAY,QAAQb,UACnCU,EAAAA,EAAAA,GAAQf,EAAKQ,IAAIW,UAAWhB,SAGrCC,EAAAA,EAAAA,MAAA,QAAMQ,UAAU,MAAKP,SAAA,CAAC,SACbC,EAAAA,EAAAA,KAAA,QAAMW,MAAO,CAACC,WAAY,QAAQb,UAClCU,EAAAA,EAAAA,GAAQf,EAAKQ,IAAIY,UAAWjB,aAtBrBF,EA6B5B,ECKA,GAAeoB,EAAAA,EAAAA,KAZS,SAAClB,GACvB,MAAO,CACHA,MAAAA,EAEN,IAE2B,SAACmB,GACxB,MAAO,CACP,CACJ,GAGA,EArCiB,SAACC,GAAW,IAADC,EAAAC,EAAAC,EAC1B,OACEtB,EAAAA,EAAAA,MAACZ,EAAiB,CAACoB,UAAU,UAASP,SAAA,EACpCD,EAAAA,EAAAA,MAAA,OAAKQ,UAAU,kBAAiBP,SAAA,CAAC,2BAE/BC,EAAAA,EAAAA,KAAA,QAAMqB,QAASJ,EAAMK,aAAavB,SAAC,kBAAoB,QAGzDC,EAAAA,EAAAA,KAAA,OAAKM,UAAU,uBAAsBP,SAEL,QAFKmB,EAEjCD,EAAMpB,MAAMH,KAAK6B,mBAAW,IAAAL,GAAU,QAAVC,EAA5BD,EAA8BM,gBAAQ,IAAAL,GAAa,QAAbC,EAAtCD,EAAwCM,mBAAW,IAAAL,OAAvB,EAA5BA,EAAqDM,KAAI,SAACC,EAAMC,GAAC,IAAAC,EAAAC,EAAA,OAC/D9B,EAAAA,EAAAA,KAAC+B,EAAiB,CAChBrC,KAAQiC,EACR9B,MAASoB,EAAMpB,MACfF,OAAU,MAAMiC,EAChBhC,KAAyB,QAArBiC,EAAKZ,EAAMpB,MAAMH,YAAI,IAAAmC,GAAsB,QAAtBC,EAAhBD,EAAkBN,YAAYS,gBAAQ,IAAAF,OAAtB,EAAhBA,EAAwCG,MACjD,QAOd,G","sources":["Components/forecasts/style.js","Components/forecasts/forecastComponent.js","Components/forecasts/index.js"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const ForecastContainer = styled.div`\n    \n    .heading{\n      color: #343434;\n      text-align: left;\n      margin: 0 0 30px;\n      padding: 0 15px;\n\n      span{\n        color: blue;\n        cursor: pointer;\n      }\n    }\n    .content-main{\n        display: grid;\n        grid-column-gap: 1%;\n        grid-row-gap: 20px;    \n        padding-left: 1%;    \n        grid-template-columns: 19% 19% 19% 19% 19%;\n    }\n    @media only screen and (max-width: 900px){\n\n      .content-main{\n        grid-template-columns: 32% 32% 32%;\n      }\n  \n    }\n    @media only screen and (max-width: 576px){\n\n      .content-main{\n        grid-template-columns: 49% 49%;\n      }\n  \n    }\n\n`;\n\n\nexport const ForecastContent = styled.div`\n    \n\n    display: inline-block;\n    float: none;\n    border-radius: 10px;\n    /* max-width: 300px; */\n    /* margin: 10px 0; */\n    box-shadow: 1px 1px 5px 2px #d1d1d1;\n    padding: 15px 10px;\n    box-sizing: border-box;\n    background: linear-gradient(32deg, #4646ed, #6f6fb9, #2828c5);\n    position: relative;\n    max-width: 185px;\n    margin: auto;\n\n    .city-name{\n        color: #ffffff;\n        font-size: 16px;\n        font-weight: bold;\n      }\n      .day{\n        font-size: 12px;\n        color: #fff;\n        text-align: right;\n      }\n      .condition{\n        color: #d1cccc;\n        text-align: right;\n        font-size: 12px;\n        margin: 5px 0; \n      }\n      .tmp{\n        color: #fff;\n        font-size: 35px;\n        margin: 10px 0;\n      }\n      img{\n        width: 45px;\n        float: none;\n        position: absolute;\n        left: 10px;\n        top: 5px;\n      }\n      .temp-content{\n        position: absolute;\n        bottom: 10px;\n        font-size: 12px;\n        text-align: left;\n        color: #fff;\n\n        .low{\n          float: right;\n          margin-right: 20px;\n        }\n      }\n`;\n\n","\nimport { ForecastContent } from './style';\n// import partialCloud from '../../Assets/images/weather_default.png'\nimport { getTemp } from '../../Services/utils.js'\n\n\n\nconst Component = ({data, tmpKey, city, store}) => {\n  return (\n    <ForecastContent key = {tmpKey}>\n        <img src={ \"https:\" + data.day.condition.icon} alt ='weather'/>\n        <div className='hor-row day'>\n            {data.date}\n        </div>\n        <div className='hor-row condition'>\n            {data.day.condition.text}\n        </div>\n        <div className='hor-row city-name'>\n            {city}\n        </div>\n        <div className='hor-row tmp'>\n            {getTemp(data.day.avgtemp_c, store)}\n        </div>\n        <div className='hor-row temp-content'>\n            <span className='high'>\n                High: <span style={{fontWeight: \"bold\"}}>\n                    {getTemp(data.day.maxtemp_c, store)}\n                </span>\n            </span>\n            <span className='low'>\n                Low: <span style={{fontWeight: \"bold\"}}>\n                    {getTemp(data.day.mintemp_c, store)}\n                </span>\n            </span>\n        </div>\n\n    </ForecastContent>\n  );\n};\n\nexport default Component;\n","import React, {useEffect} from 'react';\nimport { ForecastContainer } from './style';\nimport { connect } from \"react-redux\";\nimport ForecastComponent from './forecastComponent';\n\n\nconst Forecast = (props) => {\n  return (\n    <ForecastContainer className='hor-row'>\n      <div className='hor-row heading'>\n        Forecast for five days(\n        <span onClick={props.hideForecast}>Hide section?</span>\n        )\n      </div>\n      <div className='hor-row content-main'>\n        {\n          props.store.data.weatherData?.forecast?.forecastday?.map((item, i)=>(\n            <ForecastComponent\n              data = {item}\n              store = {props.store}\n              tmpKey = {\"key\"+i}\n              city = { props.store.data?.weatherData.location?.name }\n            />\n          ))\n        }\n        \n      </div>\n    </ForecastContainer>\n  );\n};\n\nconst mapStateToProps = (store) => {\n  return {\n      store,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n    };\n};\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Forecast);\n"],"names":["ForecastContainer","styled","div","_templateObject","_taggedTemplateLiteral","ForecastContent","_templateObject2","_ref","data","tmpKey","city","store","_jsxs","children","_jsx","src","day","condition","icon","alt","className","date","text","getTemp","avgtemp_c","style","fontWeight","maxtemp_c","mintemp_c","connect","dispatch","props","_props$store$data$wea","_props$store$data$wea2","_props$store$data$wea3","onClick","hideForecast","weatherData","forecast","forecastday","map","item","i","_props$store$data","_props$store$data$wea4","ForecastComponent","location","name"],"sourceRoot":""}